import os
import glob
import numpy
import leargist
import cPickle
from PIL import Image
from prettytable import PrettyTable

# Files location
storefile = '../out_dir' # storing output directory
fname = 'train_DB'  # database

os.chdir(fname)
list_fams = os.listdir(os.getcwd()) # vector of strings with family names
no_imgs = [] # Get number of samples per family

table = PrettyTable()
table.field_names = ["Malware family", "Samples"]

# passing by all folders
for i in range(len(list_fams)):
    os.chdir(list_fams[i])
    # Searching for images in the given directory
    len1 = len(glob.glob('*.png'))  # assuming the images are stored as 'png'
    no_imgs.append(len1)
    table.add_row([list_fams[i], len1])
    os.chdir('..')

print table    # print database content
total = sum(no_imgs) # total number of all samples
# Total number of all samples
print 'Total of malwares = ', total
print 'Number of families = ', len(list_fams)

y = numpy.zeros(total)  # label vector
temp1 = numpy.zeros(len(no_imgs) + 1)
temp1[1:len(temp1)] = no_imgs

temp2 = int(temp1[0]);  # now temp2 is [0 no_imgs]

# Labels == y
for jj in range(len(no_imgs)):
    temp3 = temp2 + int(temp1[jj + 1])
    for ii in range(temp2, temp3):
        y[ii] = jj
    temp2 = temp2 + int(temp1[jj + 1])

# Bad hack
Image.Image.tostring = Image.Image.tobytes

X = numpy.zeros((total, 320))  # Feature Matrix
cnt = 0

# Collect Features == X
for i in range(len(list_fams)):
    print 'Family ', i
    os.chdir(list_fams[i])
    img_list = glob.glob('*.png') # Getting only 'png' files in a folder
    for j in range(len(img_list)):
        im = Image.open(img_list[j])
        im1 = im.resize((64,64),Image.ANTIALIAS); # for faster computation
        des = leargist.color_gist(im1)
        X[cnt] = des[0:320]
        cnt = cnt + 1
        print cnt
    os.chdir('..')

# Store important files
os.chdir(storefile)
cPickle.dump(list_fams, open(fname + '.p', 'wb'))
numpy.save('features.npy', X)
print '1/ Features file successfuly created'
numpy.save('labels.npy', y)
print '2/ Labels file successfuly created'
numpy.save('list_fams.npy', list_fams)
print '3/ Families name file successfuly created'
numpy.save('no_imgs.npy', no_imgs)
print '4/ N of imgs in each family : successfuly created'
